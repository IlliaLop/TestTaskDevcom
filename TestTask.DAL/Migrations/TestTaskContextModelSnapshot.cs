// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestTask.DAL.Context;

#nullable disable

namespace TestTask.DAL.Migrations
{
    [DbContext(typeof(TestTaskContext))]
    partial class TestTaskContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TestTask.DAL.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("ItemsDescription")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal>("OrderCost")
                        .HasColumnType("MONEY");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShippingAddress")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            ItemsDescription = "Description 1",
                            OrderCost = 100.0m,
                            OrderDate = new DateTime(2024, 1, 21, 22, 5, 3, 12, DateTimeKind.Local).AddTicks(1483),
                            ShippingAddress = "Address 1",
                            UserId = 1
                        },
                        new
                        {
                            OrderId = 2,
                            ItemsDescription = "Description 2",
                            OrderCost = 150.0m,
                            OrderDate = new DateTime(2024, 1, 21, 22, 5, 3, 12, DateTimeKind.Local).AddTicks(1525),
                            ShippingAddress = "Address 2",
                            UserId = 2
                        },
                        new
                        {
                            OrderId = 3,
                            ItemsDescription = "Description 3",
                            OrderCost = 120.0m,
                            OrderDate = new DateTime(2024, 1, 21, 22, 5, 3, 12, DateTimeKind.Local).AddTicks(1528),
                            ShippingAddress = "Address 3",
                            UserId = 3
                        },
                        new
                        {
                            OrderId = 4,
                            ItemsDescription = "Description 4",
                            OrderCost = 200.0m,
                            OrderDate = new DateTime(2024, 1, 21, 22, 5, 3, 12, DateTimeKind.Local).AddTicks(1530),
                            ShippingAddress = "Address 4",
                            UserId = 4
                        },
                        new
                        {
                            OrderId = 5,
                            ItemsDescription = "Description 5",
                            OrderCost = 90.0m,
                            OrderDate = new DateTime(2024, 1, 21, 22, 5, 3, 12, DateTimeKind.Local).AddTicks(1532),
                            ShippingAddress = "Address 5",
                            UserId = 5
                        },
                        new
                        {
                            OrderId = 6,
                            ItemsDescription = "Description 6",
                            OrderCost = 180.0m,
                            OrderDate = new DateTime(2024, 1, 21, 22, 5, 3, 12, DateTimeKind.Local).AddTicks(1535),
                            ShippingAddress = "Address 6",
                            UserId = 6
                        },
                        new
                        {
                            OrderId = 7,
                            ItemsDescription = "Description 7",
                            OrderCost = 130.0m,
                            OrderDate = new DateTime(2024, 1, 21, 22, 5, 3, 12, DateTimeKind.Local).AddTicks(1537),
                            ShippingAddress = "Address 7",
                            UserId = 7
                        });
                });

            modelBuilder.Entity("TestTask.DAL.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("DATE");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            DateOfBirth = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "John",
                            Gender = "M",
                            LastName = "Doe",
                            Login = "user1",
                            Password = "password1"
                        },
                        new
                        {
                            UserId = 2,
                            DateOfBirth = new DateTime(1992, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Jane",
                            Gender = "F",
                            LastName = "Smith",
                            Login = "user2",
                            Password = "password2"
                        },
                        new
                        {
                            UserId = 3,
                            DateOfBirth = new DateTime(1988, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Mike",
                            Gender = "M",
                            LastName = "Johnson",
                            Login = "user3",
                            Password = "password3"
                        },
                        new
                        {
                            UserId = 4,
                            DateOfBirth = new DateTime(1995, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Emily",
                            Gender = "F",
                            LastName = "Brown",
                            Login = "user4",
                            Password = "password4"
                        },
                        new
                        {
                            UserId = 5,
                            DateOfBirth = new DateTime(1990, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Alex",
                            Gender = "M",
                            LastName = "Miller",
                            Login = "user5",
                            Password = "password5"
                        },
                        new
                        {
                            UserId = 6,
                            DateOfBirth = new DateTime(1987, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Eva",
                            Gender = "F",
                            LastName = "Davis",
                            Login = "user6",
                            Password = "password6"
                        },
                        new
                        {
                            UserId = 7,
                            DateOfBirth = new DateTime(1993, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Daniel",
                            Gender = "M",
                            LastName = "Clark",
                            Login = "user7",
                            Password = "password7"
                        });
                });

            modelBuilder.Entity("TestTask.DAL.Entities.Order", b =>
                {
                    b.HasOne("TestTask.DAL.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TestTask.DAL.Entities.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
